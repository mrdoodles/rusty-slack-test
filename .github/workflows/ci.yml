name: CI

on: pull_request

jobs:
  build-all:
    # permissions:
    #   issues: write
    #   contents: write
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # - uses: GoogleCloudPlatform/release-please-action@v2
      #   id: version
      #   with:
      #     release-type: rust

      - name: Determine version and create changelog
        id: bumper
        uses: tomerfi/version-bumper-action@1.0.1
        with:
          changelog: true

      - name: Update Cargo Version
        uses: ciiiii/toml-editor@1.0.0
        with:
          file: "file/path/xx.toml"
          key: "package.version"
          value: "${{ steps.bumper.outputs.new_version }}"

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Lint builder Dockerfile
        uses: hadolint/hadolint-action@v1.6.0
        with:
          dockerfile: Dockerfile.builder

      - name: Build an image from builder Dockerfile
        run: |
          docker build -t builder -f Dockerfile.builder .

      - name: Trivy scan builder Dockerfile
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "builder"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "MEDIUM,CRITICAL,HIGH"

      - name: Lint main Dockerfile
        uses: hadolint/hadolint-action@v1.6.0
        with:
          dockerfile: Dockerfile

      - name: Build an image from main Dockerfile
        run: |
          docker build -t rusty .

      - name: Trivy scan main Dockerfile
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "rusty"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "MEDIUM,CRITICAL,HIGH"

      - name: Zip Assets
        run: |
          zip -r src.zip ./src ./Cargo.*

      - name: Generate release and release notes
      - uses: gittools/actions/gitreleasemanager/create@v0.9.2
        name: Create release with GitReleaseManager
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: "someOwner"
          repository: $GITHUB_REPOSITORY
          milestone: "${{ steps.bumper.outputs.new_version }}"
          name: "v${{ steps.bumper.outputs.new_version }}"
          assets: |
            src/src.zip

      # - name: Commit changes
      #   run: |
      #     echo "TODO: Write Commit changes step"
      #     git config --global user.email "oberibot@oberiworks.com"
      #     git config --global user.name "Oberi Bot"
      #     git add .
      #     git commit -m"Commit release ${{ steps.bumper.outputs.new_version }}"
      #     git push

      - name: Tag release
        run: |
          docker tag rusty docker.io/mrdoodles/rusty-slack:${{ steps.bumper.outputs.new_version }}

      - name: Update major tag
        run: |
          docker tag rusty docker.io/mrdoodles/rusty-slack:$( echo ${{ steps.bumper.outputs.new_version }} | | awk -F . '{print $1}' )

      - name: Update manor tag
        run: |
          docker tag rusty docker.io/mrdoodles/rusty-slack:$( echo ${{ steps.bumper.outputs.new_version }} | | awk -F . '{print $1"."$2"}' )

      # - name: Push tags

      # - name: slack on success

      - name: Open Issue
        if: failure()
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Workflow failure for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_.",
            "assignees": ["${{ github.event.pull_request.user.login }}"]
            }' \
          --fail

      # - name: slack on failure
